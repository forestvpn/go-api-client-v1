// Code generated by go-swagger; DO NOT EDIT.

package usage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/forestvpn/go-api-client-v1/models"
)

// GetTrafficReader is a Reader for the GetTraffic structure.
type GetTrafficReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTrafficReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTrafficOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetTrafficDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTrafficOK creates a GetTrafficOK with default headers values
func NewGetTrafficOK() *GetTrafficOK {
	return &GetTrafficOK{}
}

/* GetTrafficOK describes a response with status code 200, with default header values.

OK
*/
type GetTrafficOK struct {
	Payload *models.UsageTraffic
}

func (o *GetTrafficOK) Error() string {
	return fmt.Sprintf("[GET /usage/traffic/][%d] getTrafficOK  %+v", 200, o.Payload)
}
func (o *GetTrafficOK) GetPayload() *models.UsageTraffic {
	return o.Payload
}

func (o *GetTrafficOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UsageTraffic)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTrafficDefault creates a GetTrafficDefault with default headers values
func NewGetTrafficDefault(code int) *GetTrafficDefault {
	return &GetTrafficDefault{
		_statusCode: code,
	}
}

/* GetTrafficDefault describes a response with status code -1, with default header values.

error
*/
type GetTrafficDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get traffic default response
func (o *GetTrafficDefault) Code() int {
	return o._statusCode
}

func (o *GetTrafficDefault) Error() string {
	return fmt.Sprintf("[GET /usage/traffic/][%d] GetTraffic default  %+v", o._statusCode, o.Payload)
}
func (o *GetTrafficDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *GetTrafficDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
