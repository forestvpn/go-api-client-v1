// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// WireGuardProfileCreateRequest wire guard profile create request
//
// swagger:model WireGuardProfileCreateRequest
type WireGuardProfileCreateRequest struct {

	// android device info
	AndroidDeviceInfo *AndroidDeviceInfo `json:"android_device_info,omitempty"`

	// device id
	// Required: true
	// Min Length: 1
	DeviceID *string `json:"device_id"`

	// device name
	// Required: true
	// Min Length: 1
	DeviceName *string `json:"device_name"`

	// ios device info
	IosDeviceInfo *IOSDeviceInfo `json:"ios_device_info,omitempty"`
}

// Validate validates this wire guard profile create request
func (m *WireGuardProfileCreateRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAndroidDeviceInfo(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceID(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateDeviceName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateIosDeviceInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WireGuardProfileCreateRequest) validateAndroidDeviceInfo(formats strfmt.Registry) error {
	if swag.IsZero(m.AndroidDeviceInfo) { // not required
		return nil
	}

	if m.AndroidDeviceInfo != nil {
		if err := m.AndroidDeviceInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("android_device_info")
			}
			return err
		}
	}

	return nil
}

func (m *WireGuardProfileCreateRequest) validateDeviceID(formats strfmt.Registry) error {

	if err := validate.Required("device_id", "body", m.DeviceID); err != nil {
		return err
	}

	if err := validate.MinLength("device_id", "body", *m.DeviceID, 1); err != nil {
		return err
	}

	return nil
}

func (m *WireGuardProfileCreateRequest) validateDeviceName(formats strfmt.Registry) error {

	if err := validate.Required("device_name", "body", m.DeviceName); err != nil {
		return err
	}

	if err := validate.MinLength("device_name", "body", *m.DeviceName, 1); err != nil {
		return err
	}

	return nil
}

func (m *WireGuardProfileCreateRequest) validateIosDeviceInfo(formats strfmt.Registry) error {
	if swag.IsZero(m.IosDeviceInfo) { // not required
		return nil
	}

	if m.IosDeviceInfo != nil {
		if err := m.IosDeviceInfo.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ios_device_info")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this wire guard profile create request based on the context it is used
func (m *WireGuardProfileCreateRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := m.contextValidateAndroidDeviceInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if err := m.contextValidateIosDeviceInfo(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *WireGuardProfileCreateRequest) contextValidateAndroidDeviceInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.AndroidDeviceInfo != nil {
		if err := m.AndroidDeviceInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("android_device_info")
			}
			return err
		}
	}

	return nil
}

func (m *WireGuardProfileCreateRequest) contextValidateIosDeviceInfo(ctx context.Context, formats strfmt.Registry) error {

	if m.IosDeviceInfo != nil {
		if err := m.IosDeviceInfo.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("ios_device_info")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *WireGuardProfileCreateRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *WireGuardProfileCreateRequest) UnmarshalBinary(b []byte) error {
	var res WireGuardProfileCreateRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
